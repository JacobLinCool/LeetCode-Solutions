import{_ as t,r as p,o,c,a as n,b as l,F as i,e as a,d as s}from"./app.54b71ebc.js";const r={},u=a('<h1 id="_48-rotate-image" tabindex="-1"><a class="header-anchor" href="#_48-rotate-image" aria-hidden="true">#</a> 48. Rotate Image</h1><br><p>Tags: <code>Array</code>, <code>Math</code>, <code>Matrix</code></p><p>You are given an <code>n x n</code> 2D <code>matrix</code> representing an image, rotate the image by <strong>90</strong> degrees (clockwise).</p>',4),k=s("You have to rotate the image "),d={href:"https://en.wikipedia.org/wiki/In-place_algorithm",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"in-place",-1),v=s(", which means you have to modify the input 2D matrix directly. "),b=n("strong",null,"DO NOT",-1),h=s(" allocate another 2D matrix and do the rotation."),g=a(`<p><strong>Example 1:</strong></p><p><img src="https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg" alt=""></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example 2:</strong></p><p><img src="https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg" alt=""></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Constraints:</strong></p><ul><li><code>n == matrix.length == matrix[i].length</code></li><li><code>1 &lt;= n &lt;= 20</code></li><li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li></ul><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><h3 id="js" tabindex="-1"><a class="header-anchor" href="#js" aria-hidden="true">#</a> JS</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 48. Rotate Image (11/14/2021)</span>
<span class="token comment">// Runtime: 68 ms (67.09%) Memory: 39.11 MB (94.94%) </span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">matrix</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span> Do not return anything, modify matrix in-place instead.
 */</span>
<span class="token keyword">function</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token parameter">matrix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> size <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
        level <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    
    <span class="token keyword">while</span><span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> level<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> top <span class="token operator">=</span> matrix<span class="token punctuation">[</span>level<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// go right</span>
            <span class="token keyword">const</span> right <span class="token operator">=</span> matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// go down</span>
            <span class="token keyword">const</span> bottom <span class="token operator">=</span> matrix<span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> level<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// go left</span>
            <span class="token keyword">const</span> left <span class="token operator">=</span> matrix<span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> level<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>level<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// go up</span>
            
            matrix<span class="token punctuation">[</span>level<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> left<span class="token punctuation">;</span>
            matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> top<span class="token punctuation">;</span>
            matrix<span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> level<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> right<span class="token punctuation">;</span>
            matrix<span class="token punctuation">[</span>level <span class="token operator">+</span> size <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> level<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>level<span class="token punctuation">]</span> <span class="token operator">=</span> bottom<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        level<span class="token operator">++</span><span class="token punctuation">;</span>
        size <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function x(_,f){const e=p("ExternalLinkIcon");return o(),c(i,null,[u,n("p",null,[k,n("a",d,[m,l(e)]),v,b,h]),g],64)}var w=t(r,[["render",x],["__file","index.html.vue"]]);export{w as default};
