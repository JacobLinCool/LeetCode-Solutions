import{_ as t,r as o,o as p,c as r,a as n,b as l,F as c,e as s,d as e}from"./app.4a52569a.js";const i={},u=s(`<h1 id="_1009-complement-of-base-10-integer" tabindex="-1"><a class="header-anchor" href="#_1009-complement-of-base-10-integer" aria-hidden="true">#</a> 1009. Complement of Base 10 Integer</h1><h2 id="problem" tabindex="-1"><a class="header-anchor" href="#problem" aria-hidden="true">#</a> Problem</h2><br><p>Tags: <code>Bit Manipulation</code></p><p>The <strong>complement</strong> of an integer is the integer you get when you flip all the <code>0</code>&#39;s to <code>1</code>&#39;s and all the <code>1</code>&#39;s to <code>0</code>&#39;s in its binary representation.</p><ul><li>For example, The integer <code>5</code> is <code>&quot;101&quot;</code> in binary and its <strong>complement</strong> is <code>&quot;010&quot;</code> which is the integer <code>2</code>.</li></ul><p>Given an integer <code>n</code>, return <em>its complement</em>.</p><p><strong>Example 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: n = 5
Output: 2
Explanation: 5 is &quot;101&quot; in binary, with complement &quot;010&quot; in binary, which is 2 in base-10.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Example 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: n = 7
Output: 0
Explanation: 7 is &quot;111&quot; in binary, with complement &quot;000&quot; in binary, which is 0 in base-10.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Example 3:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: n = 10
Output: 5
Explanation: 10 is &quot;1010&quot; in binary, with complement &quot;0101&quot; in binary, which is 5 in base-10.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= n &lt; 10^9</code></li></ul>`,15),d=n("strong",null,"Note:",-1),m=e(" This question is the same as 476: "),b={href:"https://leetcode.com/problems/number-complement/",target:"_blank",rel:"noopener noreferrer"},h=e("https://leetcode.com/problems/number-complement/"),k=s(`<h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><h3 id="c" tabindex="-1"><a class="header-anchor" href="#c" aria-hidden="true">#</a> C</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// 1009. Complement of Base 10 Integer (8/9/53958)</span>
<span class="token comment">// Runtime: 0 ms (95.00%) Memory: 5.70 MB (16.25%) </span>

<span class="token keyword">int</span> <span class="token function">bitwiseComplement</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C n \u70BA 0\uFF0C\u76F4\u63A5\u56DE\u50B3 1</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
    <span class="token keyword">int</span> flipped <span class="token operator">=</span> n<span class="token punctuation">;</span>
    
    <span class="token comment">// \u5F9E\u6700\u5C3E\u7AEF\u958B\u59CB\u904D\u6B77\uFF0C\u6BCF\u6B21\u7FFB\u4E00\u500B\uFF0C\u5176\u9918\u7DAD\u6301\u539F\u72C0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">int64_t</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        flipped <span class="token operator">=</span> flipped <span class="token operator">^</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> flipped<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,3);function g(x,_){const a=o("ExternalLinkIcon");return p(),r(c,null,[u,n("p",null,[d,m,n("a",b,[h,l(a)])]),k],64)}var v=t(i,[["render",g],["__file","index.html.vue"]]);export{v as default};
