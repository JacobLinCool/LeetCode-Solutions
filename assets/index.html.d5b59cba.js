import{e as n}from"./app.3ba25e41.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="_336-palindrome-pairs" tabindex="-1"><a class="header-anchor" href="#_336-palindrome-pairs" aria-hidden="true">#</a> 336. Palindrome Pairs</h1><br><p>Tags: <code>Array</code>, <code>Hash Table</code>, <code>String</code>, <code>Trie</code></p><p>Given a list of <strong>unique</strong> words, return all the pairs of the\xA0<strong><em>distinct</em></strong> indices <code>(i, j)</code> in the given list, so that the concatenation of the two words\xA0<code>words[i] + words[j]</code> is a palindrome.</p><p><strong>Example 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: words = [&quot;abcd&quot;,&quot;dcba&quot;,&quot;lls&quot;,&quot;s&quot;,&quot;sssll&quot;]
Output: [[0,1],[1,0],[3,2],[2,4]]
Explanation: The palindromes are [&quot;dcbaabcd&quot;,&quot;abcddcba&quot;,&quot;slls&quot;,&quot;llssssll&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Example 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: words = [&quot;bat&quot;,&quot;tab&quot;,&quot;cat&quot;]
Output: [[0,1],[1,0]]
Explanation: The palindromes are [&quot;battab&quot;,&quot;tabbat&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Example 3:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: words = [&quot;a&quot;,&quot;&quot;]
Output: [[0,1],[1,0]]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= words.length &lt;= 5000</code></li><li><code>0 &lt;= words[i].length &lt;= 300</code></li><li><code>words[i]</code> consists of lower-case English letters.</li></ul><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><h3 id="js" tabindex="-1"><a class="header-anchor" href="#js" aria-hidden="true">#</a> JS</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 336. Palindrome Pairs (6/13/2021)</span>
<span class="token comment">// Runtime: 636 ms (95.00%) Memory: 49.39 MB (95.00%) </span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">words</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">palindromePairs</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">words</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u628A\u5B57\u4E32\u53CD\u8F49\u7684\u51FD\u5F0F</span>
    <span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> word<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5132\u5B58\u627E\u5230\u7684\u8FF4\u6587\u5C0D</span>
    <span class="token keyword">let</span> palindromes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5B57\u5178\uFF0C\u65B9\u4FBF\u53CD\u67E5\uFF0C\u4EE5\u53CD\u8F49\u7684 word \u70BA\u9375\uFF0C word \u4F4D\u7F6E\u70BA\u503C</span>
    <span class="token keyword">let</span> dict <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    words<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">word<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dict<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">reverse</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u904D\u6B77 words</span>
    words<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">word<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C word \u81EA\u5DF1\u662F\u975E\u7A7A\u5B57\u4E32\u8FF4\u6587\uFF0C\u4E14\u5B57\u5178\u6709\u7A7A\u5B57\u4E32\u53EF\u4EE5\u914D\u5C0D\uFF0C\u627E\u5230\u4E00\u500B\u8FF4\u6587\u5C0D</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>word <span class="token operator">==</span> <span class="token function">reverse</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span>
            palindromes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> len <span class="token operator">&lt;=</span> word<span class="token punctuation">.</span>length<span class="token punctuation">;</span> len<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5206 word \u7684\u5DE6\u908A\u9577 len \u7684\u90E8\u5206\u8207\u53F3\u908A\u5269\u9918\u7684\u90E8\u5206</span>
            <span class="token keyword">let</span> left <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">,</span> right <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token comment">// \u5DE6\u908A\u90E8\u5206\u672C\u8EAB\u662F\u8FF4\u6587\uFF0C\u4E14\u53F3\u908A\u90E8\u5206\u53EF\u4EE5\u5728\u5B57\u5178\u627E\u5230\u914D\u5C0D\uFF0C\u627E\u5230\u4E00\u500B\u8FF4\u6587\u5C0D</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token function">reverse</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span> 
                palindromes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span>dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53F3\u908A\u90E8\u5206\u672C\u8EAB\u662F\u8FF4\u6587\uFF0C\u4E14\u5DE6\u908A\u90E8\u5206\u53EF\u4EE5\u5728\u5B57\u5178\u627E\u5230\u914D\u5C0D\uFF0C\u627E\u5230\u4E00\u500B\u8FF4\u6587\u5C0D</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">==</span> <span class="token function">reverse</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span> 
                palindromes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> dict<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u9700\u8981\u5728\u8F38\u51FA\u524D\u5C07 Set \u8F49\u63DB\u6210 Array</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>palindromes<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,15);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
